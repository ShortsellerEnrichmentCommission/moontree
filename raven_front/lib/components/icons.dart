import 'package:flutter/material.dart';
import 'package:raven/raven.dart';
import 'package:raven/records/records.dart';
import 'package:fnv/fnv.dart';
import 'package:raven_mobile/services/storage.dart';

import 'package:raven_mobile/theme/extensions.dart';
import 'package:raven_mobile/widgets/circle_gradient.dart';

class IconComponents {
  IconComponents();

  Icon get back => Icon(Icons.arrow_back, color: Colors.grey[100]);

  Icon income(BuildContext context) =>
      Icon(Icons.south_west, size: 12.0, color: Theme.of(context).good);

  Icon out(BuildContext context) =>
      Icon(Icons.north_east, size: 12.0, color: Theme.of(context).bad);

  Icon importDisabled(BuildContext context) =>
      Icon(Icons.add_box_outlined, color: Theme.of(context).disabledColor);

  Icon get import => Icon(Icons.add_box_outlined);

  Icon get export => Icon(Icons.save);

  Image get assetMasterImage => Image.asset('assets/masterbag_transparent.png');
  Image get assetRegularImage => Image.asset('assets/assetbag_transparent.png');

  Widget assetAvatar(String asset) {
    /// if it's RVN we know what to do...
    if (asset.toUpperCase() == 'RVN') {
      return Image.asset('assets/rvn.png');
    }

    /// if it's an asset lets see if it has a custom logo...
    var security =
        securities.bySymbolSecurityType.getOne(asset, SecurityType.RavenAsset);
    if (security != null && !([null, '']).contains(security.ipfsLogo)) {
      var storage = AssetLogos();
      var file = storage.readLogoFileNow(security.ipfsLogo!,
          settings.primaryIndex.getOne(SettingName.Local_Path)!.value);
      // what do I do about this await?
      // set the app directory on main or a global at start up or something?
      // (could use a setting for that.) <--- used solution. (must assume file is not null).
      // maybe the entire file path should be saved on the ipfsLogo?
      return Image.file(file);
    }

    /// no logo? no problem, we'll make one...
    /// Remove the `!` when calculating hash, so each master asset
    /// matches its corresponding regular asset autogenerated colors
    var i = fnv1a_64(asset.codeUnits);
    if (asset.endsWith('!')) {
      i = fnv1a_64(asset.substring(0, asset.length - 1).codeUnits);
      return moneybag(gradients[i % gradients.length], assetMasterImage);
    }
    return moneybag(gradients[i % gradients.length], assetRegularImage);

    /// alternatively, replaceAll works because ! can only appear at the end...
    //return moneybag(
    //  gradients[
    //      fnv1a_64(asset.replaceAll('!', '').codeUnits) % gradients.length],
    //  asset.endsWith('!') ? assetMasterImage : assetRegularImage,
    //);
  }

  Widget moneybag(ColorPair background, Image foreground) =>
      Stack(children: [PopCircle(colorPair: background), foreground]);

  CircleAvatar appAvatar() =>
      CircleAvatar(backgroundImage: AssetImage('assets/rvn256.png'));

  CircleAvatar accountAvatar() =>
      CircleAvatar(backgroundImage: AssetImage('assets/rvn256.png'));

  CircleAvatar walletAvatar(Wallet wallet) => wallet is LeaderWallet
      ? CircleAvatar(backgroundImage: AssetImage('assets/rvn256.png'))
      : CircleAvatar(backgroundImage: AssetImage('assets/rvn256.png'));
}
