how do we use IPFS? 

requirements:
- given a hash from a rvn transaction, download the file
- interpret (as json, or maybe directly as image)
- use icon, display json data in metadata or something...

not required:
- upload

How to download the file:
- simple request: 
- - to download the file we need should be able to make a simple request to 'https://gateway.ipfs.io/ipfs/' like so:
- - - https://gateway.ipfs.io/ipfs/QmRAQB6YaCyidP37UdDnjFY5vQuiBrcqdyoW1CuDgwxkD4
- file explorer 1: 
- - https://ipfs.io/ipfs/QmTkzDwWqPbnAh5YiV5VwcTLnGdwSNsNTn2aDxdXBFca7D/
- - https://ipfs.io/ipfs/QmTkzDwWqPbnAh5YiV5VwcTLnGdwSNsNTn2aDxdXBFca7D/example#/ipfs/QmTDMoVqvyBkNMRhzvukTDznntByUNDwyNdSfV8dZ3VKRC/readme.md
- file explorer 2: (https://docs.web3.storage/how-tos/retrieve/#using-curl-or-powershell)
- - https://bafybeie2bjap32zi2yqh5jmpve5njwulnkualcbiszvwfu36jzjyqskceq.ipfs.dweb.link/
- js web3 client: (https://docs.web3.storage/how-tos/retrieve/#using-the-client-libraries)
- - dart has the ability to execute javascript I think so in theory we could use a web3 client library for js, idk.
- ipfs dart library:
- - I have tried to install 3 different ipfs libraries for dart. 
- - all of them seem out of date as they require old and conflicting versions of other libraries.
- - I think if we used a dart library we'd have to fix someones or roll our own.

I prefer the simple request if it has no drawbacks or issues, however should we point to the regular gateway.ipfs.io or stand up our own gateway?
